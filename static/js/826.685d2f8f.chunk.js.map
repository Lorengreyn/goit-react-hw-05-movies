{"version":3,"file":"static/js/826.685d2f8f.chunk.js","mappings":"iMACA,EAA4B,8BAA5B,EAAmE,2BAAnE,EAAqG,yBAArG,EAAgJ,oC,SCCzI,SAASA,EAAT,GAA8D,IAAxCC,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,aAAcC,EAAS,EAATA,MACzD,OACE,gBAAKC,UAAWC,EAAhB,UACA,kBAAMC,SAAUJ,EAAcE,UAAWC,EAAzC,WACI,kBAAOE,KAAK,OAAOC,SAAUP,EAAgBE,MAAOA,EAAOC,UAAWC,KACxE,mBAAQE,KAAK,SAASH,UAAWC,EAAjC,yB,qDCFS,SAASI,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAC/B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACJP,KACFQ,EAAAA,EAAAA,IAAiBR,GAAOS,MAAK,SAAAC,GAAI,OAAIJ,EAAUI,MAC/CN,EAASJ,MAGV,CAACA,IAaJ,OACE,iCACE,SAACf,EAAD,CACEC,eAdiB,SAAAyB,GACrBP,EAASO,EAAEC,OAAOxB,QAcdD,aAXe,SAAAwB,GAEnBA,EAAEE,iBACFd,EAAgB,CAAEI,MAAAA,KAClBK,EAAAA,EAAAA,IAAiBL,GAAOM,MAAK,SAAAC,GAAI,OAAIJ,EAAUI,OAQ3CtB,MAAOe,KAET,SAACW,EAAA,EAAD,CAAYC,KAAMV,EAAQW,MAAO,CAAEC,KAAMtB,U,0JCpC/CuB,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,mCAEFC,EAAmB,mCAAG,oGACVF,IAAAA,IAAA,6CACiBC,IAFP,cAC3BE,EAD2B,yBAI1BA,EAASN,KAAKO,SAJY,2CAAH,qDAOnBC,EAAiB,mCAAG,WAAOC,GAAP,4FAAWC,EAAX,+BAAqB,GAArB,SACRP,IAAAA,IAAA,iBAAoBM,GAApB,OAAyBC,EAAzB,oBAA4CN,IADpC,cACzBE,EADyB,yBAGxBA,EAASN,MAHe,2CAAH,sDAMjBP,EAAgB,mCAAG,WAAML,GAAN,uFACPe,IAAAA,IAAA,gCACIC,EADJ,kBACoBhB,IAFb,cACxBkB,EADwB,yBAKvBA,EAASN,KAAKO,SALS,2CAAH","sources":["webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","Pages/MoviesPage.jsx","Services/ApiSerices.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"SearchForm_searchbar__ufFAl\",\"button\":\"SearchForm_button__UXY06\",\"form\":\"SearchForm_form__o80os\",\"searchFormInput\":\"SearchForm_searchFormInput__3mF-P\"};","import PropTypes from 'prop-types';\nimport css from './SearchForm.module.css';\nexport function SearchForm({ handleSetQuery, handleSubmit, value }) {\n  return (\n    <div className={css.searchbar}>\n    <form onSubmit={handleSubmit} className={css.form}>\n        <input type=\"text\" onChange={handleSetQuery} value={value} className={css.searchFormInput} />\n      <button type=\"submit\" className={css.button}>Search</button>\n      </form>\n    </div>\n  );\n}\n\nSearchForm.propTypes = {\n  handleSetQuery: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { FetchSearchMovie } from 'Services/ApiSerices';\nimport MoviesList from 'components/MovieList/MoviesList';\nexport default function MoviesPage() {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const param = searchParams.get('query');\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (param) {\n      FetchSearchMovie(param).then(resp => setMovies(resp));\n      setQuery(param);\n    }\n    return;\n  }, [param]);\n\n  const handleSetQuery = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n  \n    e.preventDefault();\n    setSearchParams({ query });\n    FetchSearchMovie(query).then(resp => setMovies(resp));\n  };\n\n  return (\n    <>\n      <SearchForm\n        handleSetQuery={handleSetQuery}\n        handleSubmit={handleSubmit}\n        value={query}\n      />\n      <MoviesList data={movies} state={{ from: location }} />\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst apiKey = 'ebd6af47dadeec3d22920a3fb94e7c4a';\n\nexport const FetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `/trending/movie/day?page=1&api_key=${apiKey}`\n  );\n  return response.data.results;\n};\n\nexport const FetchMovieDetails = async (id, options = '') => {\n  const response = await axios.get(`/movie/${id}${options}?api_key=${apiKey}`);\n\n  return response.data;\n};\n\nexport const FetchSearchMovie = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${apiKey}&query=${query}`\n  );\n\n  return response.data.results;\n};\n"],"names":["SearchForm","handleSetQuery","handleSubmit","value","className","css","onSubmit","type","onChange","MoviesPage","location","useLocation","useSearchParams","searchParams","setSearchParams","param","get","useState","query","setQuery","movies","setMovies","useEffect","FetchSearchMovie","then","resp","e","target","preventDefault","MoviesList","data","state","from","axios","apiKey","FetchTrendingMovies","response","results","FetchMovieDetails","id","options"],"sourceRoot":""}